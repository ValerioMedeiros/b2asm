
THEORY ProofList IS
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.52,(_f(114) => _f(115));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.51,(_f(112) => _f(113));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.50,(_f(110) => _f(111));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.49,(_f(108) => _f(109));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.48,(_f(106) => _f(107));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.47,(_f(104) => _f(105));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.46,(_f(102) => _f(103));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.45,(_f(100) => _f(101));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.44,(_f(98) => _f(99));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.43,(_f(96) => _f(97));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.42,(_f(94) => _f(95));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.41,(_f(92) => _f(93));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.40,(_f(90) => _f(91));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.39,(_f(88) => _f(89));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.38,(_f(86) => _f(87));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.37,(_f(84) => _f(85));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.36,(_f(82) => _f(83));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.35,(_f(80) => _f(81));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.34,(_f(78) => _f(79));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.33,(_f(76) => _f(77));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.32,(_f(74) => _f(75));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.31,(_f(72) => _f(73));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.30,(_f(70) => _f(71));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.29,(_f(68) => _f(69));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.28,(_f(66) => _f(67));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.27,(_f(64) => _f(65));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.26,(_f(62) => _f(63));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.25,(_f(60) => _f(61));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.24,(_f(58) => _f(59));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.23,(_f(56) => _f(57));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.22,(_f(54) => _f(55));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.21,(_f(52) => _f(53));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.20,(_f(50) => _f(51));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.19,(_f(48) => _f(49));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.18,(_f(46) => _f(47));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.17,(_f(44) => _f(45));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.16,(_f(42) => _f(43));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.15,(_f(40) => _f(41));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.14,(_f(38) => _f(39));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.13,(_f(36) => _f(37));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.12,(_f(34) => _f(35));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.11,(_f(32) => _f(33));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.10,(_f(30) => _f(31));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.9,(_f(28) => _f(29));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.8,(_f(26) => _f(27));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.7,(_f(24) => _f(25));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.6,(_f(22) => _f(23));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.5,(_f(20) => _f(21));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.4,(_f(18) => _f(19));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.3,(_f(16) => _f(17));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.2,(_f(14) => _f(15));
_f(5) & _f(4) & _f(3) & _f(2) & _f(1) & _f(8) & _f(7) & _f(11) & _f(10) & _f(6) & Assertions.1,(_f(12) => _f(13))

END
&

THEORY Formulas IS
("`Component constraints'" & btrue);
("`Used machines constraints'" & btrue);
("`Component properties'" & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func = %elem.(elem: 0..1 | elem+1) & func_inv: 0..1 +-> 0..1 & dom(func_inv) = 0..1 & func_inv = %elem.(elem: 0..1 | elem-1));
("`Seen and used machines properties'" & BIT = {0}\/{1} & bit_not: BIT +-> BIT & bit_not~: BIT +-> BIT & dom(bit_not) = BIT & ran(bit_not) = BIT & bit_not = {0|->1}\/{1|->0} & bit_and: BIT*BIT +-> BIT & dom(bit_and) = BIT*BIT & bit_and = {(0,0)|->0}\/{(0,1)|->0}\/{(1,0)|->0}\/{(1,1)|->1} & bit_or: BIT*BIT +-> BIT & dom(bit_or) = BIT*BIT & bit_or = {(0,0)|->0}\/{(0,1)|->1}\/{(1,0)|->1}\/{(1,1)|->1} & bit_xor: BIT*BIT +-> BIT & dom(bit_xor) = BIT*BIT & bit_xor = {(0,0)|->0}\/{(0,1)|->1}\/{(1,0)|->1}\/{(1,1)|->0} & bool_bit = {TRUE|->1}\/{FALSE|->0} & BYTE_INDEX = 1..8 & PHYS_BYTE_INDEX = 0..7 & BYTE = BYTE_INDEX --> BIT & card(BYTE) = 256 & !b1.(b1: BYTE => size(b1) = 8 & b1: seq(BIT) & not(b1 = {})) & is_zero: BYTE +-> BIT & dom(is_zero) = BYTE & is_zero = %w1.(w1: BYTE | bool_bit(bool(w1(1) = w1(2) & w1(2) = w1(3) & w1(3) = w1(4) & w1(4) = w1(5) & w1(5) = w1(6) & w1(6) = w1(7) & w1(7) = w1(8) & w1(8) = 0))) & parity_even: BYTE +-> BIT & dom(parity_even) = BYTE & parity_even = %bv.(bv: BYTE | 1-(bv(1)+bv(2)+bv(3)+bv(4)+bv(5)+bv(6)+bv(7)+bv(8)) mod 2) & bv8_and = %(bt1,bt2).(bt1: BYTE & bt2: BYTE | %idx.(idx: 1..8 | bit_and(bt1(idx),bt2(idx)))) & bv8_or = %(bt1,bt2).(bt1: BYTE & bt2: BYTE | %idx.(idx: 1..8 | bit_or(bt1(idx),bt2(idx)))) & bv8_xor = %(bt1,bt2).(bt1: BYTE & bt2: BYTE | %idx.(idx: 1..8 | bit_xor(bt1(idx),bt2(idx)))) & bv8get: BYTE*PHYS_BYTE_INDEX +-> BIT & dom(bv8get) = BYTE*PHYS_BYTE_INDEX & bv8get = %(bt1,ii).(bt1: BYTE & ii: PHYS_BYTE_INDEX | bt1(ii+1)) & bitset: BYTE*PHYS_BYTE_INDEX +-> BYTE & dom(bitset) = BYTE*PHYS_BYTE_INDEX & bitset = %(bt1,ii).(bt1: BYTE & ii: PHYS_BYTE_INDEX | bt1<+{ii+1|->1}) & bitclear: BYTE*PHYS_BYTE_INDEX +-> BYTE & dom(bitclear) = BYTE*PHYS_BYTE_INDEX & bitclear = %(bt1,ii).(bt1: BYTE & ii: PHYS_BYTE_INDEX | bt1<+{ii+1|->0}) & complement: BYTE +-> BYTE & dom(complement) = BYTE & complement = %bt.(bt: BYTE | %idx.(idx: 1..8 | bit_not(bt(idx)))) & swap: BYTE +-> BYTE & dom(swap) = BYTE & swap = %bt.(bt: BYTE | {1|->bt(5)}\/{2|->bt(6)}\/{3|->bt(7)}\/{4|->bt(8)}\/{5|->bt(1)}\/{6|->bt(2)}\/{7|->bt(3)}\/{8|->bt(4)}) & rotateleft: BYTE +-> BYTE & dom(rotateleft) = BYTE & rotateleft = %bv.(bv: BYTE | {1|->bv(8)}\/{2|->bv(1)}\/{3|->bv(2)}\/{4|->bv(3)}\/{5|->bv(4)}\/{6|->bv(5)}\/{7|->bv(6)}\/{8|->bv(7)}) & rotateright: BYTE +-> BYTE & dom(rotateright) = BYTE & rotateright = %bv.(bv: BYTE | {1|->bv(2)}\/{2|->bv(3)}\/{3|->bv(4)}\/{4|->bv(5)}\/{5|->bv(6)}\/{6|->bv(7)}\/{7|->bv(8)}\/{8|->bv(1)}) & get_upper_digit: BYTE +-> 0..15 & dom(get_upper_digit) = BYTE & get_upper_digit = %by.(by: BYTE | 8*by(8)+4*by(7)+2*by(6)+by(5)) & get_lower_digit: BYTE +-> 0..15 & dom(get_lower_digit) = BYTE & get_lower_digit = %by.(by: BYTE | 8*by(4)+4*by(3)+2*by(2)+by(1)) & UCHAR_MAX = 255 & UCHAR_MIN = 0 & UCHAR = UCHAR_MIN..UCHAR_MAX & byte_uchar = %v0.(v0: BYTE | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) & uchar_byte = %v0.(v0: UCHAR | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]) & SCHAR_MAX = 127 & SCHAR_MIN = -128 & SCHAR = SCHAR_MIN..SCHAR_MAX & byte_schar = %v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)) & schar_byte = %v0.(v0: SCHAR & 0<=v0 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128])\/%v0.(v0: SCHAR & not(0<=v0) | [(v0+256) mod 2/1,(v0+256) mod 4/2,(v0+256) mod 8/4,(v0+256) mod 16/8,(v0+256) mod 32/16,(v0+256) mod 64/32,(v0+256) mod 128/64,(v0+256) mod 256/128]) & uchar_schar = %v1.(v1: UCHAR & v1<=SCHAR_MAX | v1)\/%v1.(v1: UCHAR & not(v1<=SCHAR_MAX) | v1-256) & schar_uchar = %v1.(v1: 0..127 | v1)\/%v1.(v1: -128.. -1 | v1+256));
("`Included,imported and extended machines properties'" & btrue);
("`Component invariant'" & btrue);
("`Seen and used machines invariants'" & btrue);
("`Included,imported and extended machines invariants'" & btrue);
("`Component assertions'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & btrue & btrue & 0|->0: func~ & func: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & %v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)): 1..8 --> {0}\/{1} +-> -128..127 & (%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)))~: -128..127 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = -128..127 & %v0.(v0: SCHAR & 0<=v0 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128])\/%v0.(v0: SCHAR & not(0<=v0) | [(v0+256) mod 2/1,(v0+256) mod 4/2,(v0+256) mod 8/4,(v0+256) mod 16/8,(v0+256) mod 32/16,(v0+256) mod 64/32,(v0+256) mod 128/64,(v0+256) mod 256/128]): -128..127 +-> (1..8 --> {0}\/{1}) & (%v0.(v0: SCHAR & 0<=v0 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128])\/%v0.(v0: SCHAR & not(0<=v0) | [(v0+256) mod 2/1,(v0+256) mod 4/2,(v0+256) mod 8/4,(v0+256) mod 16/8,(v0+256) mod 32/16,(v0+256) mod 64/32,(v0+256) mod 128/64,(v0+256) mod 256/128]))~: 1..8 --> {0}\/{1} +-> -128..127 & dom(%v0.(v0: SCHAR & 0<=v0 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128])\/%v0.(v0: SCHAR & not(0<=v0) | [(v0+256) mod 2/1,(v0+256) mod 4/2,(v0+256) mod 8/4,(v0+256) mod 16/8,(v0+256) mod 32/16,(v0+256) mod 64/32,(v0+256) mod 128/64,(v0+256) mod 256/128])) = -128..127 & ran(%v0.(v0: SCHAR & 0<=v0 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128])\/%v0.(v0: SCHAR & not(0<=v0) | [(v0+256) mod 2/1,(v0+256) mod 4/2,(v0+256) mod 8/4,(v0+256) mod 16/8,(v0+256) mod 32/16,(v0+256) mod 64/32,(v0+256) mod 128/64,(v0+256) mod 256/128])) = 1..8 --> {0}\/{1});
("`Seen and used machines assertions'" & !bb.(bb: BIT => bit_not(bb) = 1-bb) & dom(bit_and) = BIT*BIT & ran(bit_not) = BIT & bit_not(0) = 1 & bit_not(1) = 0 & !bb.(bb: BIT => bit_not(bit_not(bb)) = bb) & dom(bit_and) = BIT*BIT & ran(bit_and) = BIT & bit_and(0,0) = 0 & bit_and(0,1) = 0 & bit_and(1,0) = 0 & bit_and(1,1) = 1 & !(b1,b2).(b1: BIT & b2: BIT => bit_and(b1,b2) = bit_and(b2,b1)) & !(b1,b2).(b1: BIT & b2: BIT & bit_and(b1,b2) = 1 => bit_and(b2,b1) = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_and(b1,b2) = 0 => bit_and(b2,b1) = 0) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT => bit_and(b1,bit_and(b2,b3)) = bit_and(bit_and(b1,b2),b3)) & !b1.(b1: BIT => bit_and(b1,1) = b1) & !b1.(b1: BIT => bit_and(b1,0) = 0) & dom(bit_or) = BIT*BIT & ran(bit_or) = BIT & bit_or(0,0) = 0 & bit_or(0,1) = 1 & bit_or(1,0) = 1 & bit_or(1,1) = 1 & !(b1,b2).(b1: BIT & b2: BIT => bit_or(b1,b2) = bit_or(b2,b1)) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,b2) = 1 => bit_or(b2,b1) = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,b2) = 0 => bit_or(b2,b1) = 0) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,0) = 1 => b1 = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_or(b1,0) = 0 => b1 = 0) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT => bit_or(b1,bit_or(b2,b3)) = bit_or(bit_or(b1,b2),b3)) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_or(b1,b2) = 1 => bit_or(b1,bit_or(b2,b3)) = 1) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_or(b1,b2) = 1 => bit_or(b1,bit_or(b2,b3)) = bit_or(1,b3)) & !b1.(b1: BIT => bit_or(b1,1) = 1) & !b1.(b1: BIT => bit_or(b1,0) = b1) & !b1.(b1: BIT => bit_or(1,b1) = 1) & !b1.(b1: BIT => bit_or(0,b1) = b1) & dom(bit_xor) = BIT*BIT & ran(bit_xor) = BIT & bit_xor(0,0) = 0 & bit_xor(0,1) = 1 & bit_xor(1,0) = 1 & bit_xor(1,1) = 0 & !(b1,b2).(b1: BIT & b2: BIT => bit_xor(b1,b2) = bit_xor(b2,b1)) & !(b1,b2).(b1: BIT & b2: BIT & bit_xor(b1,b2) = 1 => bit_xor(b2,b1) = 1) & !(b1,b2).(b1: BIT & b2: BIT & bit_xor(b1,b2) = 0 => bit_xor(b2,b1) = 0) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT => bit_xor(b1,bit_xor(b2,b3)) = bit_xor(bit_xor(b1,b2),b3)) & !(b1,b2,b3).(b1: BIT & b2: BIT & b3: BIT & bit_xor(b1,b2) = 1 => bit_xor(b1,bit_xor(b2,b3)) = bit_xor(1,b3)) & !bb.(bb: BIT => bit_xor(bb,bb) = 0) & dom(bool_bit) = BOOL & ran(bit_xor) = BIT & bool_bit(TRUE) = 1 & bool_bit(FALSE) = 0 & !bb.(bb: BIT => bb = 0 or bb = 1) & !bb.(bb: BIT & not(bb = 0) => bb = 1) & !bb.(bb: BIT & not(bb = 1) => bb = 0) & is_zero: BYTE +-> BIT & dom(is_zero) = BYTE & parity_even: BYTE +-> BIT & dom(parity_even) = BYTE & bv8_and: BYTE*BYTE +-> BYTE & dom(bv8_and) = BYTE*BYTE & bv8_or: BYTE*BYTE +-> BYTE & dom(bv8_or) = BYTE*BYTE & bv8_xor: BYTE*BYTE +-> BYTE & dom(bv8_xor) = BYTE*BYTE & complement: BYTE +-> BYTE & dom(complement) = BYTE & swap: BYTE +-> BYTE & dom(swap) = BYTE & rotateleft: BYTE +-> BYTE & dom(rotateleft) = BYTE & rotateright: BYTE +-> BYTE & dom(rotateright) = BYTE & !bt.(bt: BYTE => size(bt) = 8) & 8: INTEGER & btrue & dom(is_zero) = BYTE & ran(is_zero): POW(BIT) & dom(parity_even) = BYTE & ran(parity_even): POW(BIT) & bv8_and: BYTE*BYTE +-> BYTE & dom(bv8_and) = BYTE*BYTE & dom(complement) = BYTE & ran(complement): POW(BYTE) & dom(swap) = BYTE & ran(swap): POW(BYTE) & dom(rotateleft) = BYTE & ran(rotateleft): POW(BYTE) & dom(rotateright) = BYTE & ran(rotateright): POW(BYTE) & dom(get_upper_digit) = BYTE & ran(get_upper_digit): POW(0..15) & dom(get_lower_digit) = BYTE & ran(get_lower_digit): POW(0..15) & [1,1,1,1,1,1,1,1]: BYTE & [0,0,0,0,0,0,0,0]: BYTE & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & 512 = 2**9 & 1024 = 2**10 & 2048 = 2**11 & 4096 = 2**12 & 8192 = 2**13 & 16384 = 2**14 & 32768 = 2**15 & 65536 = 2**16 & card(byte_uchar) = 256 & card(uchar_byte) = 256 & uchar_byte = byte_uchar~ & UCHAR_MAX: INTEGER & UCHAR_MIN: INTEGER & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8 & SCHAR_MAX: INTEGER & SCHAR_MIN: INTEGER & 1 = 2**0 & 2 = 2**1 & 4 = 2**2 & 8 = 2**3 & 16 = 2**4 & 32 = 2**5 & 64 = 2**6 & 128 = 2**7 & 256 = 2**8);
("`Included,imported and extended machines assertions'" & btrue);
("`Local hypotheses'" & btrue);
(0: dom(func));
("`Local hypotheses'" & func(0) = 1 & xx: 0..10);
(xx: dom(func));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1));
(1: dom(func));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 1) & not(func(1) = 0));
(1: dom(func));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(8: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(7: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(6: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(5: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(4: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(3: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(2: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(1: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(8: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(7: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(6: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(5: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(4: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(3: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(2: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8);
(1: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 0..255);
(0<=v0);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 0..255);
(0<=v0);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 0..255);
(0<=v0);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 0..255);
(0<=v0);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 0..255);
(0<=v0);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 0..255);
(0<=v0);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 0..255);
(0<=v0);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & v0: 0..255);
(0<=v0);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(8: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(v0: dom(v0) +-> ran(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(7: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(v0: dom(v0) +-> ran(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(6: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(v0: dom(v0) +-> ran(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(5: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(v0: dom(v0) +-> ran(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(4: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(v0: dom(v0) +-> ran(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(3: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(v0: dom(v0) +-> ran(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(2: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(v0: dom(v0) +-> ran(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(1: dom(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & v0: BYTE);
(v0: dom(v0) +-> ran(v0));
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & %v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)): 1..8 --> {0}\/{1} +-> -128..127 & (%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)))~: -128..127 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = -128..127 & v0: SCHAR & not(0<=v0));
(0<=v0+256);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & %v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)): 1..8 --> {0}\/{1} +-> -128..127 & (%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)))~: -128..127 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = -128..127 & v0: SCHAR & not(0<=v0));
(0<=v0+256);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & %v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)): 1..8 --> {0}\/{1} +-> -128..127 & (%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)))~: -128..127 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = -128..127 & v0: SCHAR & not(0<=v0));
(0<=v0+256);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & %v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)): 1..8 --> {0}\/{1} +-> -128..127 & (%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)))~: -128..127 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = -128..127 & v0: SCHAR & not(0<=v0));
(0<=v0+256);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & %v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)): 1..8 --> {0}\/{1} +-> -128..127 & (%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)))~: -128..127 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = -128..127 & v0: SCHAR & not(0<=v0));
(0<=v0+256);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & %v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)): 1..8 --> {0}\/{1} +-> -128..127 & (%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)))~: -128..127 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = -128..127 & v0: SCHAR & not(0<=v0));
(0<=v0+256);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & %v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)): 1..8 --> {0}\/{1} +-> -128..127 & (%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)))~: -128..127 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = -128..127 & v0: SCHAR & not(0<=v0));
(0<=v0+256);
("`Local hypotheses'" & func(0) = 1 & !xx.(xx: 0..10 => func(xx) = xx+1) & not(func(1) = 0) & not(func(1) = 1) & not(func(1): ran(func)) & 0|->0: func~ & func: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & func: 0..1 +-> 0..1 & func~: 0..1 +-> 0..1 & dom(func) = 0..1 & ran(func) = 0..1 & 2**2 = 4 & !(xx,yy,zz).(xx: dom(func) & yy: ran(func) & zz: ran(func) & xx|->yy: func & xx|->zz: func => yy = zz) & !(vv,xx).(vv: dom(func) & xx: dom(func) => func(vv) = func(xx)) & !xx.(xx: dom(func) => #yy.(yy: ran(func) & func(xx) = yy)) & !yy.(yy: ran(func) => #xx.(xx: dom(func) & func(xx) = yy)) & !(xx,yy).(xx: dom(uchar_byte) & yy: ran(uchar_byte) => xx|->yy: {0|->[0,0,0,0,0,0,0,0]}\/{255|->[1,1,1,1,1,1,1,1]} & yy|->xx: {[0,0,0,0,0,0,0,0]|->0}\/{[1,1,1,1,1,1,1,1]|->255}) & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)): 1..8 --> {0}\/{1} +-> 0..255 & (%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)))~: 0..255 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1))) = 0..255 & %v0.(v0: 1..8 +-> {0}\/{1} & dom(v0) = 1..8 | 128*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+1*v0(1)) = (%v0.(v0: 0..255 | [v0 mod 2/1,v0 mod 4/2,v0 mod 8/4,v0 mod 16/8,v0 mod 32/16,v0 mod 64/32,v0 mod 128/64,v0 mod 256/128]))~ & %v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)): 1..8 --> {0}\/{1} +-> -128..127 & (%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1)))~: -128..127 +-> (1..8 --> {0}\/{1}) & dom(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = 1..8 --> {0}\/{1} & ran(%v0.(v0: BYTE | (-128)*v0(8)+64*v0(7)+32*v0(6)+16*v0(5)+8*v0(4)+4*v0(3)+2*v0(2)+v0(1))) = -128..127 & v0: SCHAR & not(0<=v0));
(0<=v0+256)

END
&

THEORY EnumerateX 

END
